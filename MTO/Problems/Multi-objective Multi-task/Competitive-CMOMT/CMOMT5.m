classdef CMOMT5 < Problem
% <Multi-task> <Multi-objective> <Competitive>

%------------------------------- Reference --------------------------------
% @Article{Li2025CMO-MTO,
%   title    = {Evolutionary Competitive Multiobjective Multitasking: One-Pass Optimization of Heterogeneous Pareto Solutions},
%   author   = {Li, Yanchi and Wu, Xinyi and Gong, Wenyin and Xu, Meng and Wang, Yubo and Gu, Qiong},
%   journal  = {IEEE Transactions on Evolutionary Computation},
%   year     = {2024},
%   doi      = {10.1109/TEVC.2024.3524508},
% }
%--------------------------------------------------------------------------

%------------------------------- Copyright --------------------------------
% Copyright (c) Yanchi Li. You are free to use the MToP for research
% purposes. All publications which use this platform should acknowledge
% the use of "MToP" or "MTO-Platform" and cite as "Y. Li, W. Gong, F. Ming,
% T. Zhang, S. Li, and Q. Gu, MToP: A MATLAB Optimization Platform for
% Evolutionary Multitasking, 2023, arXiv:2312.08134"
%--------------------------------------------------------------------------

methods
    function Prob = CMOMT5(varargin)
        Prob = Prob@Problem(varargin);
        Prob.maxFE = 1000 * 200;
    end

    function setTasks(Prob)
        bias1 = [0.595941581771791	-0.184404824878218	0.823133935760695	-0.608154527527011	0.631762334030168	-0.339360993123093	-0.272609933784681	-0.767488553926916	-0.195870274241917	0.157395937820091	-0.591257369090158	-0.989325459719546	0.266353651146236	-0.0916313281872194	0.0959714032312879	-0.267039356820413	0.536140935003358	-0.220129299054798	0.178280481514484	0.163811789693301	0.890645984871892	0.184699021466365	-0.380069606303152	0.469767392425363	-0.572127988468877	0.491549834908472	-0.142379917278734	-0.415446477333489	0.951768372003815	0.784231577755914	-0.291554871454951	0.188051705878568	0.931941916826271	0.963744048909024	-0.0856764909054757	0.166396531252098	-0.796378074754236	0.926564468157378	-0.0408673988432289	-0.628227321900779	-0.155161743471575	-0.289785216100572	-0.857805519899482	0.561602398524392	0.852540976920602	0.682234341158797	-0.0165126957401500	0.145114968138898	0.413674798853499];
        bias2 = [-0.414228142372990	0.528387938067264	0.432837175426769	-0.241486197193643	-0.573894261990763	0.515875661670030	0.389268777171952	-0.798369278234606	0.271371101981786	-0.0749188744704812	-0.941626353956696	0.320389657433720	-0.425173721968851	0.301673299409178	-0.534225313089252	0.758717681191557	0.152871393953612	-0.177054052530933	-0.861417404336705	0.476882570461378	-0.840048202638957	-0.859281915594123	-0.963325512124355	0.246430510064326	-0.990444316821684	-0.807936755925895	0.343977415917196	-0.499006785037297	0.164187916271050	-0.959723534888065	-0.760846443134614	0.649038575627370	0.713807200570518	0.874489252913814	0.493017198667847	-0.429643556498962	0.0311702863810526	0.441078155435154	-0.606833530823323	-0.408246432701881	0.494600352327644	0.179523150862337	0.839326965736036	0.345819736510414	-0.716763185857009	0.313243472910052	0.304364575322920	-0.536310016498758	-0.172409004316719];

        Prob.T = 2;
        Prob.M(1) = 2;
        Prob.D(1) = 30;
        Prob.Fnc{1} = @(x)getFun_CMOMT(x, 5, 1, bias1);
        Prob.Lb{1} = -5 * ones(1, Prob.D(1));
        Prob.Ub{1} = 5 * ones(1, Prob.D(1));
        Prob.Lb{1}(1) = 0;
        Prob.Ub{1}(1) = 1;

        Prob.M(2) = 2;
        Prob.D(2) = 50;
        Prob.Fnc{2} = @(x)getFun_CMOMT(x, 5, 2, bias2 - 2);
        Prob.Lb{2} = -5 * ones(1, Prob.D(2));
        Prob.Ub{2} = 5 * ones(1, Prob.D(2));
        Prob.Lb{2}(1) = 0;
        Prob.Ub{2}(1) = 1;
    end

    function optimum = getOptimum(Prob)
        N = 10000; M = 2;
        optimum{1}(:, 1) = linspace(0, 1, N)';
        optimum{1}(:, 2) = 1 - optimum{1}(:, 1).^0.5;
        optimum{1} = optimum{1} .* repmat([30, 10], N, 1) + repmat([0, 0], N, 1);

        optimum{2}(:, 2) = linspace(0, 1, N)';
        optimum{2}(:, 1) = 1 - optimum{2}(:, 2).^0.5;
        optimum{2} = optimum{2} .* repmat([10, 20], N, 1) + repmat([0, 0], N, 1);
    end
end
end
